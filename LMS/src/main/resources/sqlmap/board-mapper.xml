<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

	<select id="list" resultType="board.BoardVO">
		select * from
		(select rownum no, b.*, (select name from member m
		where
		m.id=b.writer) name
		from (select * from board
		<include refid="search_where" />
		order by writedate asc
		) b
		order by no desc)
		where no between
		#{beginList} and #{endList}
	</select>
	<select id="totalList" resultType="integer">
		select count(*) from board
		<include refid="search_where" />
	</select>

	<select id="info" resultType="board.BoardVO">
		select b.*, name
		from board b left outer join member m on b.writer = m.id
		where b.id = #{id}
	</select>

	<insert id="insert">
		insert into board(title, content, writer,
		filename,filepath)
		values (#{title, jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR},
		#{writer, jdbcType=VARCHAR},
		#{filename,jdbcType=VARCHAR},
		#{filepath, jdbcType=VARCHAR})
	</insert>


	<select id="delete">
		delete from board where id = #{id}
	</select>


	<select id="update">
		update board set title = #{title,
		jdbcType=VARCHAR},content = #{content, jdbcType=VARCHAR},
		filename =
		#{filename, jdbcType=VARCHAR}, filepath = #{filepath,
		jdbcType=VARCHAR}
		where id = #{id}
	</select>

	<select id="read">
		update board set readcnt = readcnt + 1 where id =
		#{id}
	</select>


	<insert id="comment_insert">
		insert into board_comment (content, writer, board_id)
		values ( #{content}, #{writer, jdbcType=VARCHAR}, #{board_id,
		jdbcType=VARCHAR})
	</insert>


	<select id="comment_list" resultType="board.BoardCommentVO">
		select *
		from board_comment
		where board_id = #{board_id, jdbcType=VARCHAR}
		order by id desc
	</select>

	<update id="comment_update">
		update board_comment set content = #{content}
		where id
		= #{id}
	</update>


	<delete id="comment_delete">
		delete from board_comment where id = #{id}
	</delete>

	<sql id='search_where'>
		<if test=" search=='title' or search=='content' ">
			where ${search} like '%'|| #{keyword} || '%'
		</if>
		<if test=' search=="writer" '>
			where writer in ( select id from member
			where name like
			'%'|| #{keyword} || '%' )
		</if>
		<if test=' search=="all" '>
			where title like '%'|| #{keyword} || '%'
			or content like
			'%'|| #{keyword} || '%'
		</if>

	</sql>

</mapper>


